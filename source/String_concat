@Lab18 - String Concat

	.data
szMsgA:		.asciz 	"Enter string 1: "
szMsgB:		.asciz 	"Enter string 2: "
szValA:	.skip 	20
szValB:	.skip 	20
cCR:		.byte	10
		.balign 4
ptrStr:		.word 	0
iLenA:		.word 	0
iLenB:		.word 	0


.text
	.global _start
	.extern malloc
	.extern free

_start:
	mov r0, #0
	ldr r1, =szMsgA
	bl  putstring
	ldr r1, =szValA
	ldr r2, =0xf
	bl  getstring

	ldr r1, =szMsgB
	bl  putstring
	ldr r1, =szValB
	ldr r2, =0xf
	bl  getstring

	bl  StringLength
	ldr r1, =iLenB
	str r0, [r1]
	mov r3, r0		@This is the string length variable

	ldr r1, =szValA
	@mov r0, #0
	bl  StringLength
	ldr r1, =iLenA
	str r0, [r1]
	add r3, r0
	mov r0, r3
	
	push {r3}
	bl   malloc
	pop  {r3}

	ldr r1, =ptrStr
	str r0, [r1]

				@Loop through szValA copying each byte into ptrStr
	ldr r2, =szValA
	ldr r4, =ptrStr
	str r0, [r4]
	ldr r4, =ptrStr
	ldr r4, [r4]
	ldr r5, =iLenA
	ldr r5, [r5]		@ R5 is the stringLength of szValA

loop1:
	cmp  r5, #0		@Have we finished copying szValA?
	beq  bottom1
	ldrb r6, [r2],#1
	strb r6, [r4],#1
	sub  r5, #1
	b    loop1

bottom1:
	ldr r2, =szValB
	ldr r5, =iLenB
	ldr r5, [r5]
	@add r5, #1

loop2:
	cmp  r5, #0		@Have we finished copying szValB?
	beq  bottom2
	ldrb r6, [r2],#1
	strb r6, [r4],#1
	sub  r5, #1
	b    loop2

bottom2:
	ldr r1, =ptrStr
	ldr r1, [r1]
	bl  putstring
	ldr r1, =cCR
	bl  putch

	ldr r0, [r1]

	mov R0, #0
	mov R7, #1
	svc 0

.end
